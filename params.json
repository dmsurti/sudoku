{"name":"Sudoku","tagline":"A sudoko solver in common lisp","body":"### Loading\r\n\r\n#### With Quicklisp\r\n\r\n1. Clone sudoku into your quicklisp local-projects directory.\r\n   ```code\r\n   cd ~/quicklisp/local-projects\r\n   git clone git@github.com:dmsurti/sudoku.git\r\n   ```\r\n\r\n2. Load with\r\n   ```code\r\n   (ql:quickload \"sudoku\")\r\n   ```\r\n\r\n#### ~~Without Quicklisp (But why?)~~\r\n\r\n1. Ensure sudoku.asd is in your ASDF path.\r\n\r\n2. Load with (asdf:oos 'asdf:load-op 'sudoku)\r\n\r\n### Define an incomplete board and solve it\r\n\r\n3. Create an incomplete, unsolved sudoku board as follows:\r\n   ```code\r\n   (setf board\r\n         #(0 0 2 4 7 0 0 5 8 \r\n           0 0 0 0 0 0 0 0 0 \r\n           0 0 0 0 0 1 0 4 0 \r\n           0 0 0 0 2 0 0 0 9 \r\n           5 2 8 0 9 0 4 0 0 \r\n           0 0 9 0 0 0 1 0 0 \r\n           0 0 0 0 0 0 0 3 0 \r\n           3 0 0 0 0 7 5 0 0 \r\n           6 8 5 0 0 2 0 0 0))\r\n   ```\r\n\r\n4. To solve the sudoku board and print the solution run:\r\n   ```code\r\n   (sudoku:print-board (sudoku:solve board))\r\n   ```\r\n\r\n### Run the tests\r\n\r\n1. You can run a test suite which tests 50 easy puzzles, 95 hard puzzles and 11\r\n   hardest puzzles. \r\n   \r\n   ```code\r\n   (asdf:oos 'asdf:test-op :sudoku)\r\n   ```\r\n   \r\n   These puzzles were downloaded from http://norvig.com/sudoku.html.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}